name: Convert Surge Module to Egern

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  convert:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 2: Install dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl
        sudo apt-get install -y libnss3 libgdk-pixbuf2.0-0 libx11-xcb1
        sudo apt-get install -y libxcomposite1 libxdamage1 libxi6
        # Remove deprecated packages and add alternatives
        sudo apt-get install -y libasound2-dev
        npm install puppeteer js-yaml

    # Step 3: Download file
    - name: Download Surge Module
      run: |
        mkdir -p /tmp/raw/
        wget -O /tmp/raw/official.sgmodule https://raw.githubusercontent.com/QingRex/LoonKissSurge/refs/heads/main/Surge/Official/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E5%8E%BB%E5%B9%BF%E5%91%8A.official.sgmodule

    # Step 4: Run Puppeteer conversion script
    - name: Run Puppeteer conversion script
      run: |
        mkdir -p /MODULES
        node <<EOF
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          const path = require('path');
          const yaml = require('js-yaml');
          
          (async () => {
            // Step 1: Launch Puppeteer browser instance
            const browser = await puppeteer.launch({ headless: true });
            const page = await browser.newPage();

            // Step 2: Read file content
            const surgeModuleContent = fs.readFileSync('/tmp/raw/official.sgmodule', 'utf-8');

            // Step 3: Open the conversion website
            await page.goto('https://gen.egernapp.com/');
            await page.type('textarea[placeholder="Surge 模块"]', surgeModuleContent);
            
            // Wait for conversion to complete and get the Egern module content
            await page.waitForSelector('textarea[readonly]');
            const egernModuleContent = await page.$eval('textarea[readonly]', el => el.value);

            // Step 4: Save the converted content as YAML
            const outputFilePath = path.resolve('/MODULES/converted_module.yaml');
            const egernYaml = yaml.dump(egernModuleContent);
            fs.writeFileSync(outputFilePath, egernYaml);

            // Step 5: Close browser
            await browser.close();
          })();
        EOF

    # Step 5: Clean up /tmp folder
    - name: Clean up /tmp folder
      run: |
        rm -rf /tmp/raw/

    # Step 6: Upload converted file (using v4 for better performance)
    - name: Upload converted file
      uses: actions/upload-artifact@v4  # Use v4 for uploading artifacts
      with:
        name: converted_module
        path: /MODULES/converted_module.yaml
